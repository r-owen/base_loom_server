{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Loom Server A loom server is a package based on base_loom_server that allows you to control a dobby loom from a web browser (e.g. on a phone or tablet). Two examples are seguin_loom_server and toika_loom_server . This document explains how to use any of these loom servers (though there may be a few loom-specific differences that are described in that package's documentation). The first step is to install the software. Once you have done that, read on: Connect to the Loom Server Connect to the loom server using any modern web browser (e.g. on a phone, tablet, or laptop). The address will be http://*hostname*.local:8000 where hostname is the host name of the loom server computer, as determined in Installing . Select the Mode The server has two modes, which are listed at the top of the web page: Weaving and Threading: Weaving is used to weave fabric; this is by far the most common mode. Threading will help you thread the loom, by lifting shafts for groups of threads. Click on the word to select that mode. The bold word shows the current mode. The links above give detailed instructions for using each mode. But before you dive into that, read the next section about pattern files: Upload and Select Pattern Files Before you can weave or thread, you must upload one or more pattern files to the loom server. The server accepts WIF (.wif), Fiberworks (.dtx), and WeavePoint (.wpo) files. There are two ways to upload files: Push the \"Upload\" button. Drag and drop the files onto the web page (making sure the web page is gray before dropping them). Once you have uploaded patterns, you can select one using the menu labeled \"Pattern\" (next to the \"Upload\" button). The loom server remembers the 25 most recent patterns that you have uploaded, and this information is saved on disk, so should not be lost in a power failure. The saved information includes the most recent pick (weaving) and the most recent warp thread group (threading). This allows you to switch between different patterns while weaving something. However, if you upload a new pattern with the same file name as a saved pattern, the new pattern overwrites the old and the pick and warp thread group information is reset. So please be careful. To clear out the pattern menu (which may become cluttered over time), select \"Clear Recents\", the last item in the pattern menu. This clears out information for all patterns except the current pattern. You can also restart the loom server with the --reset-db command-line argument. This can be useful if upgrading to a new version of the loom software that has an incompatible database format. Multiple Connections The server only allows one web browser to connect, and the most recent connection wins. This prevents a mystery connection from hogging the loom. If the connection is dropped on the device you want to use for weaving, simply reload the page to regain the connection. Reset the Loom Connection Every time you connected to the web server or reload the page, the server refreshes its connection to the loom (by disconnecting and immediately reconnecting). So if the server is reporting a problem with its connection to the loom, and it is not due to the loom losing power, or a disconnected or bad USB cable, you might try reloading the page. If the loom seems confused, try turning off the loom, waiting a few seconds, then turning it on again. Then reload the web page, to force the web server to make a new connection to the loom.","title":"Home"},{"location":"#loom-server","text":"A loom server is a package based on base_loom_server that allows you to control a dobby loom from a web browser (e.g. on a phone or tablet). Two examples are seguin_loom_server and toika_loom_server . This document explains how to use any of these loom servers (though there may be a few loom-specific differences that are described in that package's documentation). The first step is to install the software. Once you have done that, read on:","title":"Loom Server"},{"location":"#connect-to-the-loom-server","text":"Connect to the loom server using any modern web browser (e.g. on a phone, tablet, or laptop). The address will be http://*hostname*.local:8000 where hostname is the host name of the loom server computer, as determined in Installing .","title":"Connect to the Loom Server"},{"location":"#select-the-mode","text":"The server has two modes, which are listed at the top of the web page: Weaving and Threading: Weaving is used to weave fabric; this is by far the most common mode. Threading will help you thread the loom, by lifting shafts for groups of threads. Click on the word to select that mode. The bold word shows the current mode. The links above give detailed instructions for using each mode. But before you dive into that, read the next section about pattern files:","title":"Select the Mode"},{"location":"#upload-and-select-pattern-files","text":"Before you can weave or thread, you must upload one or more pattern files to the loom server. The server accepts WIF (.wif), Fiberworks (.dtx), and WeavePoint (.wpo) files. There are two ways to upload files: Push the \"Upload\" button. Drag and drop the files onto the web page (making sure the web page is gray before dropping them). Once you have uploaded patterns, you can select one using the menu labeled \"Pattern\" (next to the \"Upload\" button). The loom server remembers the 25 most recent patterns that you have uploaded, and this information is saved on disk, so should not be lost in a power failure. The saved information includes the most recent pick (weaving) and the most recent warp thread group (threading). This allows you to switch between different patterns while weaving something. However, if you upload a new pattern with the same file name as a saved pattern, the new pattern overwrites the old and the pick and warp thread group information is reset. So please be careful. To clear out the pattern menu (which may become cluttered over time), select \"Clear Recents\", the last item in the pattern menu. This clears out information for all patterns except the current pattern. You can also restart the loom server with the --reset-db command-line argument. This can be useful if upgrading to a new version of the loom software that has an incompatible database format.","title":"Upload and Select Pattern Files"},{"location":"#multiple-connections","text":"The server only allows one web browser to connect, and the most recent connection wins. This prevents a mystery connection from hogging the loom. If the connection is dropped on the device you want to use for weaving, simply reload the page to regain the connection.","title":"Multiple Connections"},{"location":"#reset-the-loom-connection","text":"Every time you connected to the web server or reload the page, the server refreshes its connection to the loom (by disconnecting and immediately reconnecting). So if the server is reporting a problem with its connection to the loom, and it is not due to the loom losing power, or a disconnected or bad USB cable, you might try reloading the page. If the loom seems confused, try turning off the loom, waiting a few seconds, then turning it on again. Then reload the web page, to force the web server to make a new connection to the loom.","title":"Reset the Loom Connection"},{"location":"coding/","text":"Coding Installing Source Code Install Python as explained in Installing . Download the source code from github , or make a fork and git clone that. Inside the directory, do the following: Make \"editable installation\" of the package. An editable installation runs from the source code, so changes you make to the source are used when you run or test the code, without the need to reinstall the package: pip install -e .'[dev]' where the single quotes around [dev] are required in zsh, but not in bash. '[dev]' installs development-related packages such as pytest (see the file pyproject.toml for the full list). Activate the pre-commit hooks: pre-commit install Run unit tests to test your installation: pytest You may run an example loom server with: run_example_loom <num_shafts> mock Please only specify the mock serial port; connecting it to a real loom will not work ( ExampleMockLoom is loosely based on a S\u00e9guin loom, but is not compatible). run_example_loom <num_shafts> mock also accepts these command-line arguments: * `--reset-db` Reset the pattern database. Try this if you think the database is corrupted. * `--verbose` Print more diagnostic information. Note that the example loom server uses the same pattern database as seguin_loom_server and toika_loom_server . To run mypy run: MYPYPATH=src mypy . This avoids complaints about module name ambiguity. In mock mode the web page shows a few extra controls for debugging. Warning: the web server's automatic reload feature, which reloads Python code whenever you save changes, does not work with this software. Instead you have to kill the web server by typing control-C several times, until you get a terminal prompt, then run the server again. This may be a bug in uvicorn; see this discussion for more information. Writing a Loom Server Install the base_loom_server package either using pip, or from source (as described above). Source makes it easier to look through the code. Write a subclass of BaseMockLoom that emulates your loom. Two examples are ExampleMockLoom in this package and MockLoom in toika_loom_server . Write a subclass of BaseLoomServer that talks to the loom. Two examples are ExampleLoomServer in this package and LoomServer in toika_loom_server . Write a main.py like the one in this package, to run your loom server. Copy tests/test_mock_loom.py and modify it to suit your mock loom. The unit tests for your loom server should be able to use testutils.BaseTestLoomServer , as tests/test_loom_server.py does. Write a pyproject.toml like the one for toika_loom_server .","title":"Coding"},{"location":"coding/#coding","text":"","title":"Coding"},{"location":"coding/#installing-source-code","text":"Install Python as explained in Installing . Download the source code from github , or make a fork and git clone that. Inside the directory, do the following: Make \"editable installation\" of the package. An editable installation runs from the source code, so changes you make to the source are used when you run or test the code, without the need to reinstall the package: pip install -e .'[dev]' where the single quotes around [dev] are required in zsh, but not in bash. '[dev]' installs development-related packages such as pytest (see the file pyproject.toml for the full list). Activate the pre-commit hooks: pre-commit install Run unit tests to test your installation: pytest You may run an example loom server with: run_example_loom <num_shafts> mock Please only specify the mock serial port; connecting it to a real loom will not work ( ExampleMockLoom is loosely based on a S\u00e9guin loom, but is not compatible). run_example_loom <num_shafts> mock also accepts these command-line arguments: * `--reset-db` Reset the pattern database. Try this if you think the database is corrupted. * `--verbose` Print more diagnostic information. Note that the example loom server uses the same pattern database as seguin_loom_server and toika_loom_server . To run mypy run: MYPYPATH=src mypy . This avoids complaints about module name ambiguity. In mock mode the web page shows a few extra controls for debugging. Warning: the web server's automatic reload feature, which reloads Python code whenever you save changes, does not work with this software. Instead you have to kill the web server by typing control-C several times, until you get a terminal prompt, then run the server again. This may be a bug in uvicorn; see this discussion for more information.","title":"Installing Source Code"},{"location":"coding/#writing-a-loom-server","text":"Install the base_loom_server package either using pip, or from source (as described above). Source makes it easier to look through the code. Write a subclass of BaseMockLoom that emulates your loom. Two examples are ExampleMockLoom in this package and MockLoom in toika_loom_server . Write a subclass of BaseLoomServer that talks to the loom. Two examples are ExampleLoomServer in this package and LoomServer in toika_loom_server . Write a main.py like the one in this package, to run your loom server. Copy tests/test_mock_loom.py and modify it to suit your mock loom. The unit tests for your loom server should be able to use testutils.BaseTestLoomServer , as tests/test_loom_server.py does. Write a pyproject.toml like the one for toika_loom_server .","title":"Writing a Loom Server"},{"location":"installing/","text":"Installing This page gives instructions for installing a loom driver such as such as seguin_loom_server or toika_loom_server that is based on base_loom_server . See Coding if you want to work on base_loom_server or use it to develop a new loom driver. Pick your Computer Decide which computer you will use to run the loom server. Any macOS, Windows, or linux computer will work. The software uses minimal resources, so an old, slow computer is fine. A Raspberry Pi (model 4 or better) will work, but will be a bit slow when uploading patterns. A used Mac Mini is a great choice if you have a spare keyboard and monitor to get it set up. (You may also run your web browser on the same computer. This avoids the need for wifi, but may make it harder to put the display where it can easily be seen.) Install Python 3.11 or later. The link has installers for common operating systems. If you have a Raspberry Pi and the version of Python is too old, try sudo apt update followed by sodu apt upgrade python3 . If that doesn't work, you may need to build Python from source or install a newer version of the Raspberry Pi operating system. If you are a Python programmer and know what a virtual environment is, I suggest you set up a virtual environment for the loom server. Otherwise don't bother. Determine your computer's host name. In a terminal run: hostname Determine the name of the port that your computer is using to connect to the loom. The first step is to make sure the loom is not connected (unplug the USB cable or turn off the loom). The next step depends on the operating system: On macOS or linux: Run this terminal command to see which USB ports are already in use, if any: ls /dev | grep -i \"tty.*usb.*\" Connect your computer to the loom with a USB cable, turn on the loom, and wait a few seconds to let it connect. Run the same command again. There should be one new entry, which is the name of the port connected to the loom. If not, wait a bit longer and try again. On Windows this may work: Open \"Device Manager\" Expand the \"Universal Serial Bus controllers\" section. Connect your computer to the loom with a USB cable, turn on the loom, and wait a few seconds to let it connect. Check for the new connection by clicking \"Action\" > \"Scan for hardware changes\". Install the loom server software. From here on I will assume you are installing toika_loom_server . For seguin_loom_server replace \"toika\" with \"seguin\". On the command line: python -m pip install toika_loom_server Use sudo on Raspberry Pi to avoid having to hunt for the loom server executable in ~/.local/bin : sudo python -m pip install toika_loom_server In either case, watch pip's output. Near the end it should tell you where it installed run_toika_loom . Find the installed loom server executable: On macOS, Raspberry Pi (if you installed with sudo ) and most unix you can probably run the executable directly: run_toika_loom <num_shafts> mock where is the number of shafts you wish the mock loom to have. If that does not work, look at pip's output to see where it was installed. On Raspberry Pi if you did not install with sudo then it is probably here (if not, look at pip's output): ~/.local/bin/run_toika_loom <num_shafts> mock On Windows the executable will probably be buried in the Scripts subdirectory of your python installation. Again, pip's output should tell you where. If the path to the executable is long or hard to remember, consider adding the directory containing the executable to your \"PATH\", or in the case of macOS or unix, making an alias (a short word that will run the command). On macOS and unix you do this by editing a shell configuration file, which you can read about online. Here are instructions for Windows 10 . Test the loom server with the mock port: Once you have found and started the server, as above, make sure you can connect to it. Point your web browser to https://hostname.local/8000 where hostname is the host name you determined above (if the hostname ends with \".local\", don't duplicate that). Try a few things: Load one or a few weaving pattern files (which will still be there when you run with the real loom). When using the mock loom there are extra debug controls shown at the bottom of the page. One of those is a button that lets you advance to the next pick. Try that. Try changing weave direction. Try the threading panel. If you plan to weave any of the patterns you uploaded, go to the beginning before you disconnect, because the pattern database remembers where you left off weaving and threading. Run the loom server. Once you know how to run the loom server, run it with the real USB port for your loom. On macOS or unix: run_toika_loom <num_shafts> <usb_port_name> or, if it is not on the PATH: <path-to-executable>/run_toika_loom <num_shafts> <usb_port_name> On Windows: run_toika_loom.exe <num_shafts> <usb_port_name> or, if it is not on the PATH: <path-to-executable>/run_toika_loom.exe <num_shafts> <usb_port_name> is the number of shafts your loom has. This is used in two ways: Pattern files that have too many shafts are rejected. The data format used by Toika ES dobby heads varies depending on the number of shafts. If you specify the wrong value, the loom will not work correctly. The run command accepts additional options to specify the loom name, server port, etc. One option of note: --reset-db : clear all save weaving patterns. Only use this when you want a fresh start. To run more than one loom server on the same computer, specify loom-specific values for each of the following options: --db-path : path of the pattern database --port : server port For a full list of options, run the command with option --help .","title":"Installing"},{"location":"installing/#installing","text":"This page gives instructions for installing a loom driver such as such as seguin_loom_server or toika_loom_server that is based on base_loom_server . See Coding if you want to work on base_loom_server or use it to develop a new loom driver. Pick your Computer Decide which computer you will use to run the loom server. Any macOS, Windows, or linux computer will work. The software uses minimal resources, so an old, slow computer is fine. A Raspberry Pi (model 4 or better) will work, but will be a bit slow when uploading patterns. A used Mac Mini is a great choice if you have a spare keyboard and monitor to get it set up. (You may also run your web browser on the same computer. This avoids the need for wifi, but may make it harder to put the display where it can easily be seen.) Install Python 3.11 or later. The link has installers for common operating systems. If you have a Raspberry Pi and the version of Python is too old, try sudo apt update followed by sodu apt upgrade python3 . If that doesn't work, you may need to build Python from source or install a newer version of the Raspberry Pi operating system. If you are a Python programmer and know what a virtual environment is, I suggest you set up a virtual environment for the loom server. Otherwise don't bother. Determine your computer's host name. In a terminal run: hostname Determine the name of the port that your computer is using to connect to the loom. The first step is to make sure the loom is not connected (unplug the USB cable or turn off the loom). The next step depends on the operating system: On macOS or linux: Run this terminal command to see which USB ports are already in use, if any: ls /dev | grep -i \"tty.*usb.*\" Connect your computer to the loom with a USB cable, turn on the loom, and wait a few seconds to let it connect. Run the same command again. There should be one new entry, which is the name of the port connected to the loom. If not, wait a bit longer and try again. On Windows this may work: Open \"Device Manager\" Expand the \"Universal Serial Bus controllers\" section. Connect your computer to the loom with a USB cable, turn on the loom, and wait a few seconds to let it connect. Check for the new connection by clicking \"Action\" > \"Scan for hardware changes\". Install the loom server software. From here on I will assume you are installing toika_loom_server . For seguin_loom_server replace \"toika\" with \"seguin\". On the command line: python -m pip install toika_loom_server Use sudo on Raspberry Pi to avoid having to hunt for the loom server executable in ~/.local/bin : sudo python -m pip install toika_loom_server In either case, watch pip's output. Near the end it should tell you where it installed run_toika_loom . Find the installed loom server executable: On macOS, Raspberry Pi (if you installed with sudo ) and most unix you can probably run the executable directly: run_toika_loom <num_shafts> mock where is the number of shafts you wish the mock loom to have. If that does not work, look at pip's output to see where it was installed. On Raspberry Pi if you did not install with sudo then it is probably here (if not, look at pip's output): ~/.local/bin/run_toika_loom <num_shafts> mock On Windows the executable will probably be buried in the Scripts subdirectory of your python installation. Again, pip's output should tell you where. If the path to the executable is long or hard to remember, consider adding the directory containing the executable to your \"PATH\", or in the case of macOS or unix, making an alias (a short word that will run the command). On macOS and unix you do this by editing a shell configuration file, which you can read about online. Here are instructions for Windows 10 . Test the loom server with the mock port: Once you have found and started the server, as above, make sure you can connect to it. Point your web browser to https://hostname.local/8000 where hostname is the host name you determined above (if the hostname ends with \".local\", don't duplicate that). Try a few things: Load one or a few weaving pattern files (which will still be there when you run with the real loom). When using the mock loom there are extra debug controls shown at the bottom of the page. One of those is a button that lets you advance to the next pick. Try that. Try changing weave direction. Try the threading panel. If you plan to weave any of the patterns you uploaded, go to the beginning before you disconnect, because the pattern database remembers where you left off weaving and threading. Run the loom server. Once you know how to run the loom server, run it with the real USB port for your loom. On macOS or unix: run_toika_loom <num_shafts> <usb_port_name> or, if it is not on the PATH: <path-to-executable>/run_toika_loom <num_shafts> <usb_port_name> On Windows: run_toika_loom.exe <num_shafts> <usb_port_name> or, if it is not on the PATH: <path-to-executable>/run_toika_loom.exe <num_shafts> <usb_port_name> is the number of shafts your loom has. This is used in two ways: Pattern files that have too many shafts are rejected. The data format used by Toika ES dobby heads varies depending on the number of shafts. If you specify the wrong value, the loom will not work correctly. The run command accepts additional options to specify the loom name, server port, etc. One option of note: --reset-db : clear all save weaving patterns. Only use this when you want a fresh start. To run more than one loom server on the same computer, specify loom-specific values for each of the following options: --db-path : path of the pattern database --port : server port For a full list of options, run the command with option --help .","title":"Installing"},{"location":"threading/","text":"Threading The threading mode helps you correctly thread warp strings through the heddles. Every time you press the pedal, the loom will raise the next group of shafts and a display will show you which threads belong on which shaft. This page assumes you have done all the basics : Connected your web browser to the loom server Uploaded at least one pattern, and selected a pattern from the pattern menu Selected the Threading mode. Threading Display Threading is displayed as a picture that shows a group of threads (vertical colored bars) and the shaft they go through (numbers that interrupt the colored bars). It also shows the one or a few warp thread numbers along the top. Warp end numbering goes up from 1 at the right (the typical US scheme when warping back to front). Warp end 0 is special: it has no shafts and no warp thread. It is the first pick when starting to thread a pattern. It is also an intermediate step when repeating a threading sequence, unless \"Separate repeats\" is unchecked. Special cases that may only be supported by WIF files: Ends that are threaded through heddles on more than one shaft are only shown threaded on the lowest-numbered shaft, ignoring 0. Ends that are only threaded on shaft 0 (meaning not threaded through heddles on any shaft) are displayed without a shaft number. Threading Direction The square button labeled \"Direction\" shows and changes the direction you are threading: a left-facing arrow indicates that you are threading right to left. Press the button to change the threading direction. Warning the dobby's direction control button (e.g. REVERSE or UNW) is always ignored while threading. Jumping You can jump to a different group of warp ends, specified by the smaller warp end number. For example if the group size is 4 and you jump to end 21, the new ends will be 21, 22, 23, 24, and 25 (or fewer, if the warp has fewer than 25 threads), regardless of the threading direction. Jumping is a two-step process: first you request the jump, then you advance to it by pressing the loom's pedal. (Two steps are necessary because most looms will not accept an unsolicited command to raise shafts.) In detail: Enter the desired warp end number in the box to the right of \"Jump to end\". The box will turn pink and the Jump button will be enabled. Press the \"return\" keyboard key or click the \"Jump\" button on the web page to send the requested jump to the server. You will see several changes: The jump input box will have a white background and the jump button will be disabled. The pattern display will show the new thread group, with a dotted box around it. Advance to the next group by pressing the loom's pedal. Until you advance to the next group, you may request a different jump (in case you got it wrong the first time) or cancel the jump. To cancel the jump you may do any of the following: Press the \"Reset\" button to the right of \"Jump\". Reload the page. Select a new pattern. Group Size The \"Group size\" menu selects how many warp ends are in a group, All shafts for a group are raised at once. You can change the group size whenever you like; the change takes effect for the next thread group (next time you push the pedal to advance). Repeating The software will automatically repeat threading if you thread beyond the end. However, like Weaving , the transition depends on the Separate repeats checkbox: \"On\" (checked): you must advance twice when you reach an end, before the next set of shafts is raised. The first advance will lower all shafts, as a signal that you have finished threading or unthreading one pattern repeat. That is the \"separator\". \"Off\" (unchecked): there is no indication that you have reached the end of threading. The next advance will start the next repeat of threading or unthreading. The default value of Separate repeats is \"on\" if the pattern has more than 20 warp threads, \"off\" otherwise. The idea behind this is that frequent separator picks are annoying for short threading sequences, but having a separator pick is useful for long sequences. Note that the value of the Weaving and Threading Separate repeats checkboxes are independent of each other, and may also be different for different patterns. They are saved in the pattern database.","title":"Threading"},{"location":"threading/#threading","text":"The threading mode helps you correctly thread warp strings through the heddles. Every time you press the pedal, the loom will raise the next group of shafts and a display will show you which threads belong on which shaft. This page assumes you have done all the basics : Connected your web browser to the loom server Uploaded at least one pattern, and selected a pattern from the pattern menu Selected the Threading mode.","title":"Threading"},{"location":"threading/#threading-display","text":"Threading is displayed as a picture that shows a group of threads (vertical colored bars) and the shaft they go through (numbers that interrupt the colored bars). It also shows the one or a few warp thread numbers along the top. Warp end numbering goes up from 1 at the right (the typical US scheme when warping back to front). Warp end 0 is special: it has no shafts and no warp thread. It is the first pick when starting to thread a pattern. It is also an intermediate step when repeating a threading sequence, unless \"Separate repeats\" is unchecked. Special cases that may only be supported by WIF files: Ends that are threaded through heddles on more than one shaft are only shown threaded on the lowest-numbered shaft, ignoring 0. Ends that are only threaded on shaft 0 (meaning not threaded through heddles on any shaft) are displayed without a shaft number.","title":"Threading Display"},{"location":"threading/#threading-direction","text":"The square button labeled \"Direction\" shows and changes the direction you are threading: a left-facing arrow indicates that you are threading right to left. Press the button to change the threading direction. Warning the dobby's direction control button (e.g. REVERSE or UNW) is always ignored while threading.","title":"Threading Direction"},{"location":"threading/#jumping","text":"You can jump to a different group of warp ends, specified by the smaller warp end number. For example if the group size is 4 and you jump to end 21, the new ends will be 21, 22, 23, 24, and 25 (or fewer, if the warp has fewer than 25 threads), regardless of the threading direction. Jumping is a two-step process: first you request the jump, then you advance to it by pressing the loom's pedal. (Two steps are necessary because most looms will not accept an unsolicited command to raise shafts.) In detail: Enter the desired warp end number in the box to the right of \"Jump to end\". The box will turn pink and the Jump button will be enabled. Press the \"return\" keyboard key or click the \"Jump\" button on the web page to send the requested jump to the server. You will see several changes: The jump input box will have a white background and the jump button will be disabled. The pattern display will show the new thread group, with a dotted box around it. Advance to the next group by pressing the loom's pedal. Until you advance to the next group, you may request a different jump (in case you got it wrong the first time) or cancel the jump. To cancel the jump you may do any of the following: Press the \"Reset\" button to the right of \"Jump\". Reload the page. Select a new pattern.","title":"Jumping"},{"location":"threading/#group-size","text":"The \"Group size\" menu selects how many warp ends are in a group, All shafts for a group are raised at once. You can change the group size whenever you like; the change takes effect for the next thread group (next time you push the pedal to advance).","title":"Group Size"},{"location":"threading/#repeating","text":"The software will automatically repeat threading if you thread beyond the end. However, like Weaving , the transition depends on the Separate repeats checkbox: \"On\" (checked): you must advance twice when you reach an end, before the next set of shafts is raised. The first advance will lower all shafts, as a signal that you have finished threading or unthreading one pattern repeat. That is the \"separator\". \"Off\" (unchecked): there is no indication that you have reached the end of threading. The next advance will start the next repeat of threading or unthreading. The default value of Separate repeats is \"on\" if the pattern has more than 20 warp threads, \"off\" otherwise. The idea behind this is that frequent separator picks are annoying for short threading sequences, but having a separator pick is useful for long sequences. Note that the value of the Weaving and Threading Separate repeats checkboxes are independent of each other, and may also be different for different patterns. They are saved in the pattern database.","title":"Repeating"},{"location":"translations/","text":"Translations base_loom_server supports foreign language translations (for the web display, but not this documentation). At present only one translation available: is a rather poor French translation. Help from others to add and improve language support would be most welcome. Each language is supported by a separate yaml file in src/locales . Each translation file must have name language_code .js, where language_code is a standard language code as reported by the Python locale library. Here is one list of codes . On macOS and unix you can see a list of supported locales with terminal command locale -a . The file src/locales/default.yaml lists all the words and phrases for which translations are wanted. Note that the values are ignored in this file. Other than that, the format is the same as for a language file. Thus a good way to start is to copy src/locales/default.yaml to the new language file, then replace each null with the translated string. An incomplete file is better than none; missing entries will be shown in English. It is possible to have two files for a given language: one that uses a more general language code, and the other that uses a more specific code. If you do this, the more general file is read first, then the more specific file. Thus the more specific file need only have entries that differ from the general file.","title":"Translations"},{"location":"translations/#translations","text":"base_loom_server supports foreign language translations (for the web display, but not this documentation). At present only one translation available: is a rather poor French translation. Help from others to add and improve language support would be most welcome. Each language is supported by a separate yaml file in src/locales . Each translation file must have name language_code .js, where language_code is a standard language code as reported by the Python locale library. Here is one list of codes . On macOS and unix you can see a list of supported locales with terminal command locale -a . The file src/locales/default.yaml lists all the words and phrases for which translations are wanted. Note that the values are ignored in this file. Other than that, the format is the same as for a language file. Thus a good way to start is to copy src/locales/default.yaml to the new language file, then replace each null with the translated string. An incomplete file is better than none; missing entries will be shown in English. It is possible to have two files for a given language: one that uses a more general language code, and the other that uses a more specific code. If you do this, the more general file is read first, then the more specific file. Thus the more specific file need only have entries that differ from the general file.","title":"Translations"},{"location":"version_history/","text":"Version History 0.18.1 2025-04-28 Show the correct threading group size when you connect. 0.18.0 2025-04-28 Improve the threading display: Center the current group, even for patterns with short threading repeats. For ends not threaded on any shaft just show the thread without a shaft number. Formerly a truncated 0 was shown. Showing a whole 0 is possible, but likely more confusing. Remove a source of flicker by only updating the visible pattern. 0.17.0 2025-04-27 Try to prevent an unwanted stale next-pick request when the loom server connects to the loom (which is when a user connects to the server). Do this by purging the read buffer. 0.16.0 2025-04-25 Display total picks in Weaving and total ends in Threading. Also jump to total picks in Weaving and total ends in Threading. 0.15.0 2025-04-19 Save threading group size with each pattern. Warning : the database for this version is not compatible with older versions, so run the software with --reset-db if you have an older database. Add a version history to the documentation. 0.14.0 2025-04-18 Display improvements: Avoid scroll bars, if possible. Make font size vary somewhat with window size. Avoid the search bar and tab controls at the bottom of the iPhone. In Threading move Group size to the right of Direction, to save space. 0.13.0 2025-04-18 Display improvements: Resize the weaving and threading pattern display to fill available space. Move the direction control and (for weaving) pick color, for easier access. 0.12.1 2025-04-14 Small display improvements. 0.12.0 2025-04-03 Support WeavePoint .wpo files. Improve the display of white threads. 0.11.0 2025-04-02 Add a preliminary Finnish translation. Fix a few issues with the installation instructions (especially those related to finding the loom's USB port on unix and macOS). Thanks to Kalle Pihlajasaari for the translation and the doc bug reports. 0.10.0 2025-03-18 Add a Separate repeats checkbox to Weaving and Threading to control whether to include a separator pick (all shafts down) between repeats of weaving or threading. The weaving and threading values are independent of each other, and are saved per pattern in the database. The intial value for weaving/threading is \"on\" if the number of picks/ends > 20, else \"off\". The idea being that the extra advance is helpful for long sequenced, but annoying for short sequences. Warning : the database for this version is not compatible with older versions, so run the software with --reset-db if you have an older database. 0.9.1 2025-03-18 Display loom name and # shafts. Improve error handling if a pattern file cannot be parsed. 0.9.0 2025-03-14 Add required command-line argument num_shafts. This is needed in order for toika_loom_server to work correctly. 0.8.1 2025-03-05 Improve the fix for the Windows encoding issue. 0.8.0 2025-03-05 Work around an encoding issue on Windows. 0.7.1 2026-02-21 Fix a bug in the first threading group when threading high to low. Improve the threading display. 0.7.0 2025-02-21 Add support for unterminated loom I/O. This is needed for Toika looms. 0.6.0 2025-02-17 Improve support for Toika looms, and others that do not report direction. Improve server unit tests. 0.5.2 2025-02-21 Update URLS in pyproject.toml. 0.5.1 2025-02-16 Add mkdocs-based documentation. 0.5.0 2025-02-16 Add support for threading. Warning : the database for this version is not compatible with older versions, so run the software with --reset-db if you have an older database. 0.4.0 2025-02-13 Fix a bug that showed up with 32 or more shafts: JavaScript bitwise operations were failing for large values of shaft_word (due to a notorious misfeature of JavaScript). 0.3.0 2025-02-08 Add threading fields to the pattern database. This is preliminary work to add a user interface to assist in threading the loom. Warning : the database for this version is not compatible with older versions, so run the software with --reset-db if you have an older database. 0.2.1 2025-02-06 Improve dependencies to properly bring in uvicorn. Improve the README to suggest that developers install with '[dev]'. 0.2 2025-02-05 Fix a display bug: patterns at pick 0 could not be displayed, due to an undefined variable. 0.1 2025-02-03 Initial prerelease.","title":"Version Histsory"},{"location":"version_history/#version-history","text":"","title":"Version History"},{"location":"version_history/#0181-2025-04-28","text":"Show the correct threading group size when you connect.","title":"0.18.1 2025-04-28"},{"location":"version_history/#0180-2025-04-28","text":"Improve the threading display: Center the current group, even for patterns with short threading repeats. For ends not threaded on any shaft just show the thread without a shaft number. Formerly a truncated 0 was shown. Showing a whole 0 is possible, but likely more confusing. Remove a source of flicker by only updating the visible pattern.","title":"0.18.0 2025-04-28"},{"location":"version_history/#0170-2025-04-27","text":"Try to prevent an unwanted stale next-pick request when the loom server connects to the loom (which is when a user connects to the server). Do this by purging the read buffer.","title":"0.17.0 2025-04-27"},{"location":"version_history/#0160-2025-04-25","text":"Display total picks in Weaving and total ends in Threading. Also jump to total picks in Weaving and total ends in Threading.","title":"0.16.0 2025-04-25"},{"location":"version_history/#0150-2025-04-19","text":"Save threading group size with each pattern. Warning : the database for this version is not compatible with older versions, so run the software with --reset-db if you have an older database. Add a version history to the documentation.","title":"0.15.0 2025-04-19"},{"location":"version_history/#0140-2025-04-18","text":"Display improvements: Avoid scroll bars, if possible. Make font size vary somewhat with window size. Avoid the search bar and tab controls at the bottom of the iPhone. In Threading move Group size to the right of Direction, to save space.","title":"0.14.0 2025-04-18"},{"location":"version_history/#0130-2025-04-18","text":"Display improvements: Resize the weaving and threading pattern display to fill available space. Move the direction control and (for weaving) pick color, for easier access.","title":"0.13.0 2025-04-18"},{"location":"version_history/#0121-2025-04-14","text":"Small display improvements.","title":"0.12.1 2025-04-14"},{"location":"version_history/#0120-2025-04-03","text":"Support WeavePoint .wpo files. Improve the display of white threads.","title":"0.12.0 2025-04-03"},{"location":"version_history/#0110-2025-04-02","text":"Add a preliminary Finnish translation. Fix a few issues with the installation instructions (especially those related to finding the loom's USB port on unix and macOS). Thanks to Kalle Pihlajasaari for the translation and the doc bug reports.","title":"0.11.0 2025-04-02"},{"location":"version_history/#0100-2025-03-18","text":"Add a Separate repeats checkbox to Weaving and Threading to control whether to include a separator pick (all shafts down) between repeats of weaving or threading. The weaving and threading values are independent of each other, and are saved per pattern in the database. The intial value for weaving/threading is \"on\" if the number of picks/ends > 20, else \"off\". The idea being that the extra advance is helpful for long sequenced, but annoying for short sequences. Warning : the database for this version is not compatible with older versions, so run the software with --reset-db if you have an older database.","title":"0.10.0 2025-03-18"},{"location":"version_history/#091-2025-03-18","text":"Display loom name and # shafts. Improve error handling if a pattern file cannot be parsed.","title":"0.9.1 2025-03-18"},{"location":"version_history/#090-2025-03-14","text":"Add required command-line argument num_shafts. This is needed in order for toika_loom_server to work correctly.","title":"0.9.0 2025-03-14"},{"location":"version_history/#081-2025-03-05","text":"Improve the fix for the Windows encoding issue.","title":"0.8.1 2025-03-05"},{"location":"version_history/#080-2025-03-05","text":"Work around an encoding issue on Windows.","title":"0.8.0 2025-03-05"},{"location":"version_history/#071-2026-02-21","text":"Fix a bug in the first threading group when threading high to low. Improve the threading display.","title":"0.7.1 2026-02-21"},{"location":"version_history/#070-2025-02-21","text":"Add support for unterminated loom I/O. This is needed for Toika looms.","title":"0.7.0 2025-02-21"},{"location":"version_history/#060-2025-02-17","text":"Improve support for Toika looms, and others that do not report direction. Improve server unit tests.","title":"0.6.0 2025-02-17"},{"location":"version_history/#052-2025-02-21","text":"Update URLS in pyproject.toml.","title":"0.5.2 2025-02-21"},{"location":"version_history/#051-2025-02-16","text":"Add mkdocs-based documentation.","title":"0.5.1 2025-02-16"},{"location":"version_history/#050-2025-02-16","text":"Add support for threading. Warning : the database for this version is not compatible with older versions, so run the software with --reset-db if you have an older database.","title":"0.5.0 2025-02-16"},{"location":"version_history/#040-2025-02-13","text":"Fix a bug that showed up with 32 or more shafts: JavaScript bitwise operations were failing for large values of shaft_word (due to a notorious misfeature of JavaScript).","title":"0.4.0 2025-02-13"},{"location":"version_history/#030-2025-02-08","text":"Add threading fields to the pattern database. This is preliminary work to add a user interface to assist in threading the loom. Warning : the database for this version is not compatible with older versions, so run the software with --reset-db if you have an older database.","title":"0.3.0 2025-02-08"},{"location":"version_history/#021-2025-02-06","text":"Improve dependencies to properly bring in uvicorn. Improve the README to suggest that developers install with '[dev]'.","title":"0.2.1 2025-02-06"},{"location":"version_history/#02-2025-02-05","text":"Fix a display bug: patterns at pick 0 could not be displayed, due to an undefined variable.","title":"0.2 2025-02-05"},{"location":"version_history/#01-2025-02-03","text":"Initial prerelease.","title":"0.1 2025-02-03"},{"location":"weaving/","text":"Weaving How to weave fabric. This page assumes you have done all the basics : Connected your web browser to the loom server Uploaded at least one pattern, and selected a pattern from the pattern menu Selected the Weaving mode. Pattern Display The pattern is displayed as a picture that shows woven fabric below and potential future fabric above. (This is the opposite of the usual US drawdown). Note that the display is a bit naive, in that it shows all threads as the same thickness and does not display multi-layer patterns (such as doubleweave) correctly. Weave Direction The square button labeled Direction shows the weave direction: a green down arrow if you are weaving, a red up-arrow if you are unweaving. The arrow points in the direction cloth is moving through the loom. How you change direction depends on the loom: S\u00e9guin looms allow you to change direction by pressing the square weave direction button or pressing the UNW button on the dobby unit. Both work. Use whichever you prefer. Toika looms can be operated in one of two ways, specified by a command-line argument when you start the loom server: Software controls the weave direction. The square button showing weave direction can be pressed to change the direction. The physical REVERSE button on the dobby head is ignored . This is the default. The loom controls the weave direction. You have to press the physical REVERSE button on the dobby head to change direction. The square button showing weave direction is only a display (you can't click it). You run in this mode by starting the loom server with argument --weave-direction loom . For other looms, see the loom-specific documentation with the software package. Pick Color The long colored rectangle to the right the Pick row shows the color of the current pick (blank for pick 0), or, if you have specified a pick to jump to, then it is the color of that pending pick. Jumping You can jump to a different pick. Jumping is a two-step process: first you request the jump, then you advance to it by pressing the loom's pedal. (Two steps are necessary because most looms will not accept an unsolicited command to raise shafts.) In detail: Enter the desired pick in the box on the \"Jump to pick\" line. The box will turn pink and the Jump button will be enabled. Press the \"return\" keyboard key or click the \"Jump\" button on the web page to send the requested jump to the server. You will see several changes: The jump input box will have a white background and the jump button will be disabled. The pattern display will show the new pick in the center row, with a dotted box around it. Advance to the next pick by pressing the loom's pedal. Until you advance to the next pick, you may request a different jump (in case you got it wrong the first time) or cancel it. To cancel the jump you may do any of the following: Press the \"Reset\" button to the right of \"Jump\". Reload the page. Select a new pattern. Repeating The software will automatically repeat patterns if you weave or unweave beyond the end. The exact behavior is controlled by the Separate repeats checkbox: \"On\" (checked): you must advance twice when you reach an end, before the next set of shafts is raised. The first advance will lower all shafts, as a signal that you have finished weaving or unweaving one pattern repeat. That is the \"separator\". \"Off\" (unchecked): there is no indication that you have reached the end of the pattern. The next pick will be pick 1 of the pattern, if weaving, or the last pick, if unweaving. The default value of Separate repeats is \"on\" if the pattern has more than 20 picks, \"off\" otherwise. The idea behind this is that frequent separator picks are annoying for short patterns, but having a separator pick is useful for long patterns. Threading has a checkbox with the same name that does the same basic thing. However, the value of the Weaving and Threading Separate repeats checkboxes are independent of each other, and may also be different for different patterns. They are saved in the pattern database.","title":"Weaving"},{"location":"weaving/#weaving","text":"How to weave fabric. This page assumes you have done all the basics : Connected your web browser to the loom server Uploaded at least one pattern, and selected a pattern from the pattern menu Selected the Weaving mode.","title":"Weaving"},{"location":"weaving/#pattern-display","text":"The pattern is displayed as a picture that shows woven fabric below and potential future fabric above. (This is the opposite of the usual US drawdown). Note that the display is a bit naive, in that it shows all threads as the same thickness and does not display multi-layer patterns (such as doubleweave) correctly.","title":"Pattern Display"},{"location":"weaving/#weave-direction","text":"The square button labeled Direction shows the weave direction: a green down arrow if you are weaving, a red up-arrow if you are unweaving. The arrow points in the direction cloth is moving through the loom. How you change direction depends on the loom: S\u00e9guin looms allow you to change direction by pressing the square weave direction button or pressing the UNW button on the dobby unit. Both work. Use whichever you prefer. Toika looms can be operated in one of two ways, specified by a command-line argument when you start the loom server: Software controls the weave direction. The square button showing weave direction can be pressed to change the direction. The physical REVERSE button on the dobby head is ignored . This is the default. The loom controls the weave direction. You have to press the physical REVERSE button on the dobby head to change direction. The square button showing weave direction is only a display (you can't click it). You run in this mode by starting the loom server with argument --weave-direction loom . For other looms, see the loom-specific documentation with the software package.","title":"Weave Direction"},{"location":"weaving/#pick-color","text":"The long colored rectangle to the right the Pick row shows the color of the current pick (blank for pick 0), or, if you have specified a pick to jump to, then it is the color of that pending pick.","title":"Pick Color"},{"location":"weaving/#jumping","text":"You can jump to a different pick. Jumping is a two-step process: first you request the jump, then you advance to it by pressing the loom's pedal. (Two steps are necessary because most looms will not accept an unsolicited command to raise shafts.) In detail: Enter the desired pick in the box on the \"Jump to pick\" line. The box will turn pink and the Jump button will be enabled. Press the \"return\" keyboard key or click the \"Jump\" button on the web page to send the requested jump to the server. You will see several changes: The jump input box will have a white background and the jump button will be disabled. The pattern display will show the new pick in the center row, with a dotted box around it. Advance to the next pick by pressing the loom's pedal. Until you advance to the next pick, you may request a different jump (in case you got it wrong the first time) or cancel it. To cancel the jump you may do any of the following: Press the \"Reset\" button to the right of \"Jump\". Reload the page. Select a new pattern.","title":"Jumping"},{"location":"weaving/#repeating","text":"The software will automatically repeat patterns if you weave or unweave beyond the end. The exact behavior is controlled by the Separate repeats checkbox: \"On\" (checked): you must advance twice when you reach an end, before the next set of shafts is raised. The first advance will lower all shafts, as a signal that you have finished weaving or unweaving one pattern repeat. That is the \"separator\". \"Off\" (unchecked): there is no indication that you have reached the end of the pattern. The next pick will be pick 1 of the pattern, if weaving, or the last pick, if unweaving. The default value of Separate repeats is \"on\" if the pattern has more than 20 picks, \"off\" otherwise. The idea behind this is that frequent separator picks are annoying for short patterns, but having a separator pick is useful for long patterns. Threading has a checkbox with the same name that does the same basic thing. However, the value of the Weaving and Threading Separate repeats checkboxes are independent of each other, and may also be different for different patterns. They are saved in the pattern database.","title":"Repeating"}]}