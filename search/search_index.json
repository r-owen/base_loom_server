{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Loom Server A loom server is a package based on base_loom_server that allows you to control a dobby loom from a web browser (e.g. on a phone or tablet). Two examples are seguin_loom_server and toika_loom_server . This document explains how to use any of these loom servers (though there may be a few loom-specific differences that are described in that package's documentation). The first step is to install the software. Once you have done that, read on: Connect to the Loom Server Connect to the loom server using any modern web browser (e.g. on a phone, tablet, or laptop). The address will be http://*hostname*.local:8000 where hostname is the host name of the loom server computer, as determined in Installing . Select the Mode The server has two modes, which are listed at the top of the web page: Weaving and Threading: Weaving is used to weave fabric; this is by far the most common mode. Threading will help you thread the loom, by lifting shafts for groups of threads. Click on the word to select that mode. The bold word shows the current mode. The links above give detailed instructions for using each mode. But before you dive into that, read the next section about pattern files: Upload and Select Pattern Files Before you can weave or thread, you must upload one or more pattern files to the loom server. The server accepts both WIF (.wif) and Fiberworks (.dtx) files. There are two ways to upload files: Push the \"Upload\" button. Drag and drop the files onto the web page (making sure the web page is gray before dropping them). Once you have uploaded patterns, you can select one using the menu labeled \"Pattern\" (next to the \"Upload\" button). The loom server remembers the 25 most recent patterns that you have uploaded, and this information is saved on disk, so should not be lost in a power failure. The saved information includes the most recent pick (weaving) and the most recent warp thread group (threading). This allows you to switch between different patterns while weaving something. However, if you upload a new pattern with the same file name as a saved pattern, the new pattern overwrites the old and the pick and warp thread group information is reset. So please be careful. To clear out the pattern menu (which may become cluttered over time), select \"Clear Recents\", the last item in the pattern menu. This clears out information for all patterns except the current pattern. You can also restart the loom server with the --reset-db command-line argument. This can be useful if upgrading to a new version of the loom software that has an incompatible database format. Multiple Connections The server only allows one web browser to connect, and the most recent connection wins. This prevents a mystery connection from hogging the loom. If the connection is dropped on the device you want to use for weaving, simply reload the page to regain the connection. Reset the Loom Connection Every time you connected to the web server or reload the page, the server refreshes its connection to the loom (by disconnecting and immediately reconnecting). So if the server is reporting a problem with its connection to the loom, and it is not due to the loom losing power, or a disconnected or bad USB cable, you might try reloading the page. If the loom seems confused, try turning off the loom, waiting a few seconds, then turning it on again. Then reload the web page, to force the web server to make a new connection to the loom.","title":"Home"},{"location":"#loom-server","text":"A loom server is a package based on base_loom_server that allows you to control a dobby loom from a web browser (e.g. on a phone or tablet). Two examples are seguin_loom_server and toika_loom_server . This document explains how to use any of these loom servers (though there may be a few loom-specific differences that are described in that package's documentation). The first step is to install the software. Once you have done that, read on:","title":"Loom Server"},{"location":"#connect-to-the-loom-server","text":"Connect to the loom server using any modern web browser (e.g. on a phone, tablet, or laptop). The address will be http://*hostname*.local:8000 where hostname is the host name of the loom server computer, as determined in Installing .","title":"Connect to the Loom Server"},{"location":"#select-the-mode","text":"The server has two modes, which are listed at the top of the web page: Weaving and Threading: Weaving is used to weave fabric; this is by far the most common mode. Threading will help you thread the loom, by lifting shafts for groups of threads. Click on the word to select that mode. The bold word shows the current mode. The links above give detailed instructions for using each mode. But before you dive into that, read the next section about pattern files:","title":"Select the Mode"},{"location":"#upload-and-select-pattern-files","text":"Before you can weave or thread, you must upload one or more pattern files to the loom server. The server accepts both WIF (.wif) and Fiberworks (.dtx) files. There are two ways to upload files: Push the \"Upload\" button. Drag and drop the files onto the web page (making sure the web page is gray before dropping them). Once you have uploaded patterns, you can select one using the menu labeled \"Pattern\" (next to the \"Upload\" button). The loom server remembers the 25 most recent patterns that you have uploaded, and this information is saved on disk, so should not be lost in a power failure. The saved information includes the most recent pick (weaving) and the most recent warp thread group (threading). This allows you to switch between different patterns while weaving something. However, if you upload a new pattern with the same file name as a saved pattern, the new pattern overwrites the old and the pick and warp thread group information is reset. So please be careful. To clear out the pattern menu (which may become cluttered over time), select \"Clear Recents\", the last item in the pattern menu. This clears out information for all patterns except the current pattern. You can also restart the loom server with the --reset-db command-line argument. This can be useful if upgrading to a new version of the loom software that has an incompatible database format.","title":"Upload and Select Pattern Files"},{"location":"#multiple-connections","text":"The server only allows one web browser to connect, and the most recent connection wins. This prevents a mystery connection from hogging the loom. If the connection is dropped on the device you want to use for weaving, simply reload the page to regain the connection.","title":"Multiple Connections"},{"location":"#reset-the-loom-connection","text":"Every time you connected to the web server or reload the page, the server refreshes its connection to the loom (by disconnecting and immediately reconnecting). So if the server is reporting a problem with its connection to the loom, and it is not due to the loom losing power, or a disconnected or bad USB cable, you might try reloading the page. If the loom seems confused, try turning off the loom, waiting a few seconds, then turning it on again. Then reload the web page, to force the web server to make a new connection to the loom.","title":"Reset the Loom Connection"},{"location":"coding/","text":"Coding Installing Source Code Install Python as explained in Installing . Download the source code from github , or make a fork and git clone that. Inside the directory, do the following: Make \"editable installation\" of the package. An editable installation runs from the source code, so changes you make to the source are used when you run or test the code, without the need to reinstall the package: pip install -e .'[dev]' where the single quotes around [dev] are required in zsh, but not in bash. '[dev]' installs development-related packages such as pytest (see the file pyproject.toml for the full list). Activate the pre-commit hooks: pre-commit install Run unit tests to test your installation: pytest You may run an example loom server with: run_example_loom mock Please only specify the mock serial port; connecting it to a real loom will not work ( ExampleMockLoom is loosely based on a S\u00e9guin loom, but is not compatible). run_example_loom mock also accepts these command-line arguments: * `--reset-db` Reset the pattern database. Try this if you think the database is corrupted. * `--verbose` Print more diagnostic information. Note that the example loom server uses the same pattern database as seguin_loom_server and toika_loom_server . To run mypy run: MYPYPATH=src mypy . This avoids complaints about module name ambiguity. In mock mode the web page shows a few extra controls for debugging. Warning: the web server's automatic reload feature, which reloads Python code whenever you save changes, does not work with this software. Instead you have to kill the web server by typing control-C several times, until you get a terminal prompt, then run the server again. This may be a bug in uvicorn; see this discussion for more information. Writing a Loom Server Install the base_loom_server package either using pip, or from source (as described above). Source makes it easier to look through the code. Write a subclass of BaseMockLoom that emulates your loom. Two examples are ExampleMockLoom in this package and MockLoom in toika_loom_server . Write a subclass of BaseLoomServer that talks to the loom. Two examples are ExampleLoomServer in this package and LoomServer in toika_loom_server . Write a main.py like the one in this package, to run your loom server. Copy tests/test_mock_loom.py and modify it to suit your mock loom. The unit tests for your loom server should be able to use testutils.BaseTestLoomServer , as tests/test_loom_server.py does. Write a pyproject.toml like the one for toika_loom_server .","title":"Coding"},{"location":"coding/#coding","text":"","title":"Coding"},{"location":"coding/#installing-source-code","text":"Install Python as explained in Installing . Download the source code from github , or make a fork and git clone that. Inside the directory, do the following: Make \"editable installation\" of the package. An editable installation runs from the source code, so changes you make to the source are used when you run or test the code, without the need to reinstall the package: pip install -e .'[dev]' where the single quotes around [dev] are required in zsh, but not in bash. '[dev]' installs development-related packages such as pytest (see the file pyproject.toml for the full list). Activate the pre-commit hooks: pre-commit install Run unit tests to test your installation: pytest You may run an example loom server with: run_example_loom mock Please only specify the mock serial port; connecting it to a real loom will not work ( ExampleMockLoom is loosely based on a S\u00e9guin loom, but is not compatible). run_example_loom mock also accepts these command-line arguments: * `--reset-db` Reset the pattern database. Try this if you think the database is corrupted. * `--verbose` Print more diagnostic information. Note that the example loom server uses the same pattern database as seguin_loom_server and toika_loom_server . To run mypy run: MYPYPATH=src mypy . This avoids complaints about module name ambiguity. In mock mode the web page shows a few extra controls for debugging. Warning: the web server's automatic reload feature, which reloads Python code whenever you save changes, does not work with this software. Instead you have to kill the web server by typing control-C several times, until you get a terminal prompt, then run the server again. This may be a bug in uvicorn; see this discussion for more information.","title":"Installing Source Code"},{"location":"coding/#writing-a-loom-server","text":"Install the base_loom_server package either using pip, or from source (as described above). Source makes it easier to look through the code. Write a subclass of BaseMockLoom that emulates your loom. Two examples are ExampleMockLoom in this package and MockLoom in toika_loom_server . Write a subclass of BaseLoomServer that talks to the loom. Two examples are ExampleLoomServer in this package and LoomServer in toika_loom_server . Write a main.py like the one in this package, to run your loom server. Copy tests/test_mock_loom.py and modify it to suit your mock loom. The unit tests for your loom server should be able to use testutils.BaseTestLoomServer , as tests/test_loom_server.py does. Write a pyproject.toml like the one for toika_loom_server .","title":"Writing a Loom Server"},{"location":"installing/","text":"Installing This page gives instructions for installing a loom driver such as such as seguin_loom_server or toika_loom_server that is based on base_loom_server . See Coding if you want to work on base_loom_server or use it to develop a new loom driver. Pick your Computer Decide which computer you will use to run the loom server. A macOS compute will work, and a used Mac Mini is a great choice (especially if you have a spare keyboard and monitor to get it set up). A Raspberry Pi (model 4 or better) will work, though it will be a bit slow when uploading patterns. A Windows computer or unix box should also work. Install Python 3.11 or later. The link has installers for common operating systems. If you have a Raspberry Pi and the version of Python is too old, try sudo apt update followed by sodu atp upgrade python3 . If that doesn't work, you may need to build Python from source (or install a newer version of the Raspberry Pi operating system). Determine your computer's host name. In a terminal run: hostname Determine the name of the port that your computer is using to connect to the loom. On macOS or linux: Run this command to see which USB ports already in use, if any: ls /dev/tty.usb* Connect your computer to the loom with a USB cable. Turn on the loom and wait a few seconds to let it connect. Run the same command again. There should be one new entry, which is the name of the port connected to the loom. Install the loom server software. From here on I will assume you are installing toika_loom_server . For seguin_loom_server replace \"toika\" with \"seguin\". sudo pip install toika_loom_server On some operating systems (including macOS) you can omit sudo . Definitely use sudo on Raspberry Pi. Test the installation. First you may want to try the mock loom (since it does talk to your loom, and so avoids some complications): run_toika_server mock You should see the server start and you can connect to it with a web browser and try a few things out. Connect to the loom at https://hostname.local/8000 where hostname is the host name you determined above (if the hostname ends with \".local\", don't duplicate that). To control the real loom, specify the name of the USB port you found above: run_toika_server usb_port_name","title":"Installing"},{"location":"installing/#installing","text":"This page gives instructions for installing a loom driver such as such as seguin_loom_server or toika_loom_server that is based on base_loom_server . See Coding if you want to work on base_loom_server or use it to develop a new loom driver. Pick your Computer Decide which computer you will use to run the loom server. A macOS compute will work, and a used Mac Mini is a great choice (especially if you have a spare keyboard and monitor to get it set up). A Raspberry Pi (model 4 or better) will work, though it will be a bit slow when uploading patterns. A Windows computer or unix box should also work. Install Python 3.11 or later. The link has installers for common operating systems. If you have a Raspberry Pi and the version of Python is too old, try sudo apt update followed by sodu atp upgrade python3 . If that doesn't work, you may need to build Python from source (or install a newer version of the Raspberry Pi operating system). Determine your computer's host name. In a terminal run: hostname Determine the name of the port that your computer is using to connect to the loom. On macOS or linux: Run this command to see which USB ports already in use, if any: ls /dev/tty.usb* Connect your computer to the loom with a USB cable. Turn on the loom and wait a few seconds to let it connect. Run the same command again. There should be one new entry, which is the name of the port connected to the loom. Install the loom server software. From here on I will assume you are installing toika_loom_server . For seguin_loom_server replace \"toika\" with \"seguin\". sudo pip install toika_loom_server On some operating systems (including macOS) you can omit sudo . Definitely use sudo on Raspberry Pi. Test the installation. First you may want to try the mock loom (since it does talk to your loom, and so avoids some complications): run_toika_server mock You should see the server start and you can connect to it with a web browser and try a few things out. Connect to the loom at https://hostname.local/8000 where hostname is the host name you determined above (if the hostname ends with \".local\", don't duplicate that). To control the real loom, specify the name of the USB port you found above: run_toika_server usb_port_name","title":"Installing"},{"location":"threading/","text":"Threading The threading mode helps you correctly thread warp strings through the heddles. Every time you press the pedal, the loom will raise the next group of shafts and a display will show you which threads belong on which shaft. This page assumes you have done all the basics : Connected your web browser to the loom server Uploaded at least one pattern, and selected a pattern from the pattern menu Selected the Threading mode. Threading Display Threading is displayed as a picture that shows a group of threads (vertical colored bars) and the shaft they go through (numbers that interrupt the colored bars). It also shows the one or a few warp thread numbers along the top. Warp end numbering goes up from 1 at the right (the typical US scheme when warping back to front). Warp end 0 is special: it has no threads and is what a pattern starts with and is also an intermediate step when repeating a threading sequence. There is one square button right of the pattern display which shows the direction. A left-facing arrow indicates that you are threading right to left. You can press the button to change the threading direction. Warning the dobby's direction control is always ignored while threading. Repeating The software will automatically repeat threading if you thread beyond the end. However, you must advance twice when you reach an end, before the next set of shafts is raised. The first advance will lower all shafts (going to warp end 0), as a signal that you have finished threading one pattern repeat. The next advance will raise the desired shafts. Group Size The \"Group size\" menu selects how many warp ends are in a group (all shafts for a group are raised at once). You can change the group size whenever you like (the change takes effect for the next thread group). This can be convenient if threading a unit weave that also has sone non-unit-sized borders or other odd columns. Jumping You can jump to a different warp end and/or repeat number. The end number you specify will be the smaller warp end number, e.g. if group size is 4 and you jump to 21, the displayed group will be ends 21, 22, 23, 24, and 25. Jumping is a two-step process: first you request the jump, then you advance to it by pressing the loom's pedal. (Two steps are necessary because most looms will not accept an unsolicited command to raise shafts.) In detail: Enter the desired warp end and/or repeat numbers in the boxes on the \"Jump to end\" line. The box(es) will turn pink and the Jump button will be enabled. Press the \"return\" keyboard key or click the \"Jump\" button on the web page to send the requested jump to the server. You will see several changes: The jump input boxes will have a white background and the jump button will be disabled. The pattern display will show the new thread group, with a dotted box around it. (But if you are only changing the repeat number, the box will be solid.) Advance to the next group by pressing the loom's pedal. Until you advance to the next group, you can request a different jump (in case you got it wrong the first time) or cancel the jump in several ways: Press the \"Reset\" button to the right of \"Jump\". Reload the page. Select a new pattern.","title":"Threading"},{"location":"threading/#threading","text":"The threading mode helps you correctly thread warp strings through the heddles. Every time you press the pedal, the loom will raise the next group of shafts and a display will show you which threads belong on which shaft. This page assumes you have done all the basics : Connected your web browser to the loom server Uploaded at least one pattern, and selected a pattern from the pattern menu Selected the Threading mode.","title":"Threading"},{"location":"threading/#threading-display","text":"Threading is displayed as a picture that shows a group of threads (vertical colored bars) and the shaft they go through (numbers that interrupt the colored bars). It also shows the one or a few warp thread numbers along the top. Warp end numbering goes up from 1 at the right (the typical US scheme when warping back to front). Warp end 0 is special: it has no threads and is what a pattern starts with and is also an intermediate step when repeating a threading sequence. There is one square button right of the pattern display which shows the direction. A left-facing arrow indicates that you are threading right to left. You can press the button to change the threading direction. Warning the dobby's direction control is always ignored while threading.","title":"Threading Display"},{"location":"threading/#repeating","text":"The software will automatically repeat threading if you thread beyond the end. However, you must advance twice when you reach an end, before the next set of shafts is raised. The first advance will lower all shafts (going to warp end 0), as a signal that you have finished threading one pattern repeat. The next advance will raise the desired shafts.","title":"Repeating"},{"location":"threading/#group-size","text":"The \"Group size\" menu selects how many warp ends are in a group (all shafts for a group are raised at once). You can change the group size whenever you like (the change takes effect for the next thread group). This can be convenient if threading a unit weave that also has sone non-unit-sized borders or other odd columns.","title":"Group Size"},{"location":"threading/#jumping","text":"You can jump to a different warp end and/or repeat number. The end number you specify will be the smaller warp end number, e.g. if group size is 4 and you jump to 21, the displayed group will be ends 21, 22, 23, 24, and 25. Jumping is a two-step process: first you request the jump, then you advance to it by pressing the loom's pedal. (Two steps are necessary because most looms will not accept an unsolicited command to raise shafts.) In detail: Enter the desired warp end and/or repeat numbers in the boxes on the \"Jump to end\" line. The box(es) will turn pink and the Jump button will be enabled. Press the \"return\" keyboard key or click the \"Jump\" button on the web page to send the requested jump to the server. You will see several changes: The jump input boxes will have a white background and the jump button will be disabled. The pattern display will show the new thread group, with a dotted box around it. (But if you are only changing the repeat number, the box will be solid.) Advance to the next group by pressing the loom's pedal. Until you advance to the next group, you can request a different jump (in case you got it wrong the first time) or cancel the jump in several ways: Press the \"Reset\" button to the right of \"Jump\". Reload the page. Select a new pattern.","title":"Jumping"},{"location":"translations/","text":"Translations base_loom_server supports foreign language translations (for the web display, but not this documentation). At present only one translation available: is a rather poor French translation. Help from others to add and improve language support would be most welcome. Each language is supported by a separate yaml file in src/locales . Each translation file must have name language_code .js, where language_code is a standard language code as reported by the Python locale library. Here is one list of codes . On macOS and unix you can see a list of supported locales with terminal command locale -a . The file src/locales/default.yaml lists all the words and phrases for which translations are wanted. Note that the values are ignored in this file. Other than that, the format is the same as for a language file. Thus a good way to start is to copy src/locales/default.yaml to the new language file, then replace each null with the translated string. An incomplete file is better than none; missing entries will be shown in English. It is possible to have two files for a given language: one that uses a more general language code, and the other that uses a more specific code. If you do this, the more general file is read first, then the more specific file. Thus the more specific file need only have entries that differ from the general file.","title":"Translations"},{"location":"translations/#translations","text":"base_loom_server supports foreign language translations (for the web display, but not this documentation). At present only one translation available: is a rather poor French translation. Help from others to add and improve language support would be most welcome. Each language is supported by a separate yaml file in src/locales . Each translation file must have name language_code .js, where language_code is a standard language code as reported by the Python locale library. Here is one list of codes . On macOS and unix you can see a list of supported locales with terminal command locale -a . The file src/locales/default.yaml lists all the words and phrases for which translations are wanted. Note that the values are ignored in this file. Other than that, the format is the same as for a language file. Thus a good way to start is to copy src/locales/default.yaml to the new language file, then replace each null with the translated string. An incomplete file is better than none; missing entries will be shown in English. It is possible to have two files for a given language: one that uses a more general language code, and the other that uses a more specific code. If you do this, the more general file is read first, then the more specific file. Thus the more specific file need only have entries that differ from the general file.","title":"Translations"},{"location":"weaving/","text":"Weaving How to weave fabric. This page assumes you have done all the basics : Connected your web browser to the loom server Uploaded at least one pattern, and selected a pattern from the pattern menu Selected the Weaving mode. Pattern Display The pattern is displayed as a picture that shows woven fabric below and potential future fabric above. (This is the opposite of the usual US drawdown). Note that the display is a bit naive, in that it shows all threads as the same thickness and does not display multi-layer patterns (such as doubleweave) correctly. There are two rectangles to the right of the pattern display: The short upper rectangle shows the color of the current pick (blank if pick 0), or, if you have specified a pick to jump to, then it is the color of that pick. The square button below that shows the weave direction: whether you are weaving (green down arrow) or unweaving (red up arrow). The arrow points in the direction cloth is moving through the loom. How you change direction depends on the loom: S\u00e9guin looms allow you to change direction by pressing the square weave direction button and by pressing the UNW button on the dobby unit. Both work. Use whichever you prefer. Toika looms can be operated in one of two ways, specified by a command-line argument when you start the loom server: Software controls the weave direction. The square button showing weave direction can be pressed to change the direction. The physical button on the dobby head is ignored. This is the default. The loom controls the weave direction. You have to press the physical button on the dobby head to change directions. The square button showing weave direction is only a display (you can't click it). You run in this mode by starting the loom server with argument --weave-direction loom , For other looms, see the loom-specific documentation with the software package. Repeating The software will automatically repeat patterns if you weave or unweave beyond the end. However, you must advance twice when you reach an end, before the next set of shafts is raised. The first advance will lower all shafts, as a signal that you have finished weaving or unweaving one pattern repeat. The next advance will show the desired shed. Jumping You can jump to a different pick and/or repeat number. This is a two-step process: first you request the jump, then you advance to it by pressing the loom's pedal. (Two steps are necessary because most looms will not accept an unsolicited command to raise shafts.) In detail: Enter the desired pick and/or repeat numbers in the boxes on the \"Jump to pick\" line. The box(es) will turn pink and the Jump button will be enabled. Press the \"return\" keyboard key or click the \"Jump\" button on the web page to send the requested jump to the server. You will see several changes: The jump input boxes will have a white background and the jump button will be disabled. The pattern display will show the new pick in the center row, with a dotted box around it. (But if you are only changing the repeat number, the box will be solid.) Advance to the next pick by pressing the loom's pedal. Until you advance to the next pick, you can request a different jump (in case you got it wrong the first time) or cancel the jump in several ways: Press the \"Reset\" button to the right of \"Jump\". Reload the page. Select a new pattern.","title":"Weaving"},{"location":"weaving/#weaving","text":"How to weave fabric. This page assumes you have done all the basics : Connected your web browser to the loom server Uploaded at least one pattern, and selected a pattern from the pattern menu Selected the Weaving mode.","title":"Weaving"},{"location":"weaving/#pattern-display","text":"The pattern is displayed as a picture that shows woven fabric below and potential future fabric above. (This is the opposite of the usual US drawdown). Note that the display is a bit naive, in that it shows all threads as the same thickness and does not display multi-layer patterns (such as doubleweave) correctly. There are two rectangles to the right of the pattern display: The short upper rectangle shows the color of the current pick (blank if pick 0), or, if you have specified a pick to jump to, then it is the color of that pick. The square button below that shows the weave direction: whether you are weaving (green down arrow) or unweaving (red up arrow). The arrow points in the direction cloth is moving through the loom. How you change direction depends on the loom: S\u00e9guin looms allow you to change direction by pressing the square weave direction button and by pressing the UNW button on the dobby unit. Both work. Use whichever you prefer. Toika looms can be operated in one of two ways, specified by a command-line argument when you start the loom server: Software controls the weave direction. The square button showing weave direction can be pressed to change the direction. The physical button on the dobby head is ignored. This is the default. The loom controls the weave direction. You have to press the physical button on the dobby head to change directions. The square button showing weave direction is only a display (you can't click it). You run in this mode by starting the loom server with argument --weave-direction loom , For other looms, see the loom-specific documentation with the software package.","title":"Pattern Display"},{"location":"weaving/#repeating","text":"The software will automatically repeat patterns if you weave or unweave beyond the end. However, you must advance twice when you reach an end, before the next set of shafts is raised. The first advance will lower all shafts, as a signal that you have finished weaving or unweaving one pattern repeat. The next advance will show the desired shed.","title":"Repeating"},{"location":"weaving/#jumping","text":"You can jump to a different pick and/or repeat number. This is a two-step process: first you request the jump, then you advance to it by pressing the loom's pedal. (Two steps are necessary because most looms will not accept an unsolicited command to raise shafts.) In detail: Enter the desired pick and/or repeat numbers in the boxes on the \"Jump to pick\" line. The box(es) will turn pink and the Jump button will be enabled. Press the \"return\" keyboard key or click the \"Jump\" button on the web page to send the requested jump to the server. You will see several changes: The jump input boxes will have a white background and the jump button will be disabled. The pattern display will show the new pick in the center row, with a dotted box around it. (But if you are only changing the repeat number, the box will be solid.) Advance to the next pick by pressing the loom's pedal. Until you advance to the next pick, you can request a different jump (in case you got it wrong the first time) or cancel the jump in several ways: Press the \"Reset\" button to the right of \"Jump\". Reload the page. Select a new pattern.","title":"Jumping"}]}